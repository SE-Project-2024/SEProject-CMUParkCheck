<%- include("../partials/admin-header") %>
<div class="parking-complaint-text">
    <div class="parking-complaint">PARKING COMPLAINTS</div>
</div>
<!-- <div class="view-complaints-form">
    <button type="button" class="complaints-form" id="complaintsBtn">Report a Parking Issue</button>
</div> -->
<div class="status-filter">
    <select id="status-filter" name="status">
        <option value="all">All</option>
        <option value="resolved">Resolved</option>
        <option value="pending">Pending</option>
    </select>
</div>

<div class="container">
    <% const uniqueRows = Array.from(new Set(rows.map(a => a.ref_number)))
    .map(ref_number => {
        return rows.find(a => a.ref_number === ref_number);
    });
    uniqueRows.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));%>
    <% uniqueRows.forEach(function(row) { %>
        <div class="dashboard-row status-<%= row.status %>">
            <div class="dashboard-date"><%= new Date(row.created_at).toLocaleString() %></div>
            <div class="dashboard-location">Parking Location: <%= row.parking_area %></div>
            <div class="dashboard-issue">Issue: <%= row.issue %></div>
            <% if (row.filename) { %>
                <div class="dashboard-image">
                    <img src="/uploads/<%= row.filename %>" alt="Complaint Image" width="200">
                </div>
            <% } %> 
            <div class="dashboard-status">
                Status: 
                <select class="status-selector" data-id="<%= row.id %>">
                    <option value="resolved" <%= row.status === 'resolved' ? 'selected' : '' %>>Resolved</option>
                    <option value="pending" <%= row.status === 'pending' ? 'selected' : '' %>>Pending</option>
                </select>
            </div>          
        </div>
    <% }); %> 
</div>

<style>
    .dashboard-row {
        background-color: #f8f8f8;
        margin: 70px auto -60px auto;
        display: flex;
        flex-direction: column; 
        align-items: flex-start;
        justify-content: center;
        border-radius: 5px;
        width: 80%;
        height: auto;
        padding: 12px;
        border: 2px solid #f8f8f8;
        font-size: 16px;

    }
    .status-filter select {
        margin-left: 10px;
        padding: 10px;
        background-color: white;
        border: 1px solid #b7b1b1;
        border-radius: 5px;
        font-size: 14px;
        width: 100px;
    }
    .status-selector{
        width: 100px;
        margin-top: 10px;
    }
    .dashboard-date {
        font-style: italic;
        margin-left: auto;
        font-size: 13px;
    }
    .dashboard-status {
        font-weight: bold;
        padding: 5px 10px;
        border-radius: 20px;
        font-size: 16px;
    }
    
    .dashboard-location{
        font-weight: bold;
        padding: 5px 10px;
        border-radius: 20px;
    }
    .dashboard-issue {
        background-color: #f5f5f5;
        padding: 10px;
        border-radius: 5px;
        font-size: 13px;
        text-align: justify;
        width: 100%;
        position: relative;
    }
    .status-filter select {
        margin-left: 10px;
        background-color: #872698;  
        color: white;
        padding: 10px;
        border: none;
        border-radius: 5px;
        font-size: 14px;
        width: 100px;
    }
        .dashboard-images{
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
        max-width: 100%;
        overflow: hidden;
        padding-left: 10px;
    }
    .dashboard-images img{
        max-width: 100%;
        height: auto;
        width: 100px;
    }


</style>

<script>
    
   document.querySelectorAll('.status-selector').forEach(selector => {
    selector.addEventListener('change', function() {
        const complaintId = this.getAttribute('data-id');
        const newStatus = this.value;

        fetch(`/admin/update-status/${complaintId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ status: newStatus }),
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert('Status updated successfully');
            } else {
                alert('Failed to update status');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('An error occurred while updating status');
        });
    });
});


    document.getElementById('complaintsBtn').addEventListener('click', function(){
        window.location.href ='/complaints';
    });
    document.getElementById('status-filter').addEventListener('change', function() {
    const selectedStatus = this.value;
    const complaintRows = document.querySelectorAll('.dashboard-row');

    complaintRows.forEach(row => {
        if (selectedStatus === 'all') {
            row.style.display = 'block';
        } else {
            if (row.classList.contains('status-' + selectedStatus)) {
                row.style.display = 'block';
            } else {
                row.style.display = 'none';
            }
        }
    });
});
    
</script>
