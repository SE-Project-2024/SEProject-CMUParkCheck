<style>
    .info-window-link{
        color:blue;
        text-decoration: underline;
        cursor: pointer;
    }
</style>
<div id="map"></div>
<script>
    const openParkingDetails = () => {
                    console.log('Opening parking details');
                    window.location.href = '/parking-details';
                };
    let map;
    let parkingMarkers = [];
    let buildingMarker = null;

    function initMap(){
        console.log('Initializing map...');
        const customMap = [
            {
                featureType: 'poi',
                stylers: [{ visibility: 'off'}]
            },
            {
                featureType: 'transit.station',
                stylers: [{visibility: 'off'}]
            },
            {
                featureType: 'administrative.land_parcel',
                stylers: [{visibility: 'off'}]
            },
            {
                featureType: 'road.local',
                elementType: 'labels',
                stylers: [{ visibility: 'on'}]
            },
            {
                featureType: 'poi.park',
                elementType: 'labels',
                stylers:[{ visibility: 'off'}]
            },
        ];
        map = new google.maps.Map(document.getElementById("map"), {
            center: { lat: 18.800088, lng: 98.95072},
            zoom: 17,
            styles: customMap
        });
        infoWindow = new google.maps.InfoWindow();

        vehicleTypeMarkers ={
            'car': '/img/marker_car.png',
            'motorbike': '/img/marker_motorbike.png',
        }
    
        fetch(`http://localhost:3000/api/parking_areas`)
        .then(response => response.json())
        .then(data => {
            console.log('Fetched data: ', data);
            data.forEach(parking_area => {
                const iconURL = vehicleTypeMarkers[parking_area.vehicle_type];
                const marker = new google.maps.Marker({
                    position: { lat: parseFloat(parking_area.latitude), lng: parseFloat(parking_area.longitude) },
                    map: map,
                    title: parking_area.name,
                    icon: {
                        url: iconURL,
                        scaledSize: new google.maps.Size(60 , 60)
                    }
                });
                const infoWindowContent = `
                <div class="info-window">
                    <h3>${parking_area.name}</h3>
                    <p>${parking_area.latitude} , ${parking_area.longitude}</p>
                    <div class="info-window-link" onclick="openParkingDetails()">See more</div>
                    </div>
                `;
    
                const infoWindow = new google.maps.InfoWindow({
                    content: infoWindowContent
                });
                marker.addListener('click', () => {
                    console.log(`Clicked on marker: ${parking_area.name}`);
                    infoWindow.setContent(infoWindowContent);
                    infoWindow.open(map, marker);
                });
                parkingMarkers.push(marker);
            });
        })
        .catch(error => console.error('Error fetching parking areas: ', error));
    }

</script>
<script src = "https://maps.googleapis.com/maps/api/js?key=AIzaSyARbNYm3tKrpe52ERJZbUhHhVkrUxJrKZE&libraries=geometry&callback=initMap" async defer></script>